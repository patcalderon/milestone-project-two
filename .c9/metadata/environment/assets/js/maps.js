{"changed":true,"filter":false,"title":"maps.js","tooltip":"/assets/js/maps.js","value":"var map, places, infoWindow;\nvar markers = [];\nvar autocomplete;\nvar countryRestrict = { 'country': [] };\nvar MARKER_PATH = 'https://developers.google.com/maps/documentation/javascript/images/marker_green';\nvar hostnameRegexp = new RegExp('^https?://.+?/');\n\n//List of properties for countries contain details about zoom, and map location\nvar countries = {\n 'au': {\n  center: { lat: -25.3, lng: 133.8 },\n  zoom: 4\n },\n 'br': {\n  center: { lat: -14.2, lng: -51.9 },\n  zoom: 3\n },\n 'ca': {\n  center: { lat: 62, lng: -110.0 },\n  zoom: 3\n },\n 'fr': {\n  center: { lat: 46.2, lng: 2.2 },\n  zoom: 5\n },\n 'de': {\n  center: { lat: 51.2, lng: 10.4 },\n  zoom: 5\n },\n 'mx': {\n  center: { lat: 23.6, lng: -102.5 },\n  zoom: 4\n },\n 'nz': {\n  center: { lat: -40.9, lng: 174.9 },\n  zoom: 5\n },\n 'it': {\n  center: { lat: 41.9, lng: 12.6 },\n  zoom: 5\n },\n 'za': {\n  center: { lat: -30.6, lng: 22.9 },\n  zoom: 5\n },\n 'es': {\n  center: { lat: 40.5, lng: -3.7 },\n  zoom: 5\n },\n 'pt': {\n  center: { lat: 39.4, lng: -8.2 },\n  zoom: 6\n },\n 'us': {\n  center: { lat: 37.1, lng: -95.7 },\n  zoom: 3\n },\n 'uk': {\n  center: { lat: 54.8, lng: -4.6 },\n  zoom: 5\n }\n};\n\n//Resets the map and all the input fields.\nfunction reset() {\n clearResults();\n clearMarkers();\n $('#country')[0].selectedIndex = 0;\n $(\"#autocomplete\").val(\"\");\n $('#results-heading').innerHTML(\"\");\n map.setZoom(2);\n map.setCenter(countries[\"uk\"].center);\n map.componentRestrictions = { 'country': [] };\n place = \"\";\n\n}\n\n  function initMap() {\n   $(\"#accomodationRadio\").prop(\"checked\", true);\n   map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 2,\n    center: countries['uk'].center,\n    mapTypeControl: false,\n    panControl: false,\n    zoomControl: false,\n    streetViewControl: false,\n    componentRestrictions: countryRestrict\n\n   });\n\n infoWindow = new google.maps.InfoWindow({\n  content: document.getElementById('info-content')\n });\n\n // Create the autocomplete object and associate it with the UI input control.\n // Restrict the search to the default country, and to place type \"cities\".\n autocomplete = new google.maps.places.Autocomplete(\n  /** @type {!HTMLInputElement} */\n  (\n   document.getElementById('autocomplete')), {\n   types: ['(cities)'],\n   componentRestrictions: countryRestrict\n  }); places = new google.maps.places.PlacesService(map);\n\n autocomplete.addListener('place_changed', onPlaceChanged); \n document.getElementById('foodRadio').addEventListener('change', onPlaceChanged); \n document.getElementById('accomodationRadio').addEventListener('change', onPlaceChanged); \n document.getElementById('touristRadio').addEventListener('change', onPlaceChanged);\n // Add a DOM event listener to react when the user selects a country.\n document.getElementById('country').addEventListener('change', setAutocompleteCountry); \n document.getElementById('reset-button').addEventListener(\"click\", setAutocompleteCountry);\n\n}\n\n// When the user selects a city, get the place details for the city and\n// zoom the map in on the city.\nfunction onPlaceChanged() {\n if ($(\"#accomodationRadio\").is(':checked')) {\n  var place = autocomplete.getPlace();\n  if (place.geometry) {\n   map.panTo(place.geometry.location);\n   map.setZoom(15);\n   searchHotel();\n  }\n  else {\n   $('#autocomplete').attr(\"placeholder\",\"Enter a city\");\n  }\n }\n else if ($(\"#foodRadio\").is(':checked')) {\n  var place = autocomplete.getPlace();\n  if (place.geometry) {\n   map.panTo(place.geometry.location);\n   map.setZoom(15);\n   searchRestaurant();\n  }\n  else {\n   $('#autocomplete').attr(\"placeholder\",\"Enter a city\");\n  }\n }\n else if ($(\"#touristRadio\").is(':checked')) {\n  var place = autocomplete.getPlace();\n  if (place.geometry) {\n   map.panTo(place.geometry.location);\n   map.setZoom(15);\n   searchAttractions();\n  }\n  else {\n   $('#autocomplete').attr(\"placeholder\",\"Enter a city\");\n  }\n }\n\n}\n\n// Search for hotels in the selected city, within the viewport of the map.\nfunction searchHotel() {\n var search = {\n  bounds: map.getBounds(),\n  types: ['lodging']\n };\n\n places.nearbySearch(search, function(results, status) {\n  if (status === google.maps.places.PlacesServiceStatus.OK) {\n   clearResults();\n   clearMarkers();\n   document.getElementById('results-heading').innerHTML = \"Results\";\n   // Create a marker for each hotel found, and\n   // assign a letter of the alphabetic to each marker icon.\n   for (var i = 0; i < results.length; i++) {\n    var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));\n    var markerIcon = MARKER_PATH + markerLetter + '.png';\n    // Use marker animation to drop the icons incrementally on the map.\n    markers[i] = new google.maps.Marker({\n     position: results[i].geometry.location,\n     animation: google.maps.Animation.DROP,\n     icon: markerIcon\n    });\n    // If the user clicks a hotel marker, show the details of that hotel\n    // in an info window.\n    markers[i].placeResult = results[i];\n    google.maps.event.addListener(markers[i], 'click', showInfoWindow);\n    setTimeout(dropMarker(i), i * 100);\n    addResult(results[i], i);\n   }\n  }\n });\n}\n\n// Search for restaurants in the selected city, within the viewport of the map.\nfunction searchRestaurant() {\n var search = {\n  bounds: map.getBounds(),\n  types: ['restaurant', 'bar']\n };\n\n places.nearbySearch(search, function(results, status) {\n  if (status === google.maps.places.PlacesServiceStatus.OK) {\n   clearResults();\n   clearMarkers();\n   document.getElementById('results-heading').innerHTML = \"Results\";\n   // Create a marker for each resteraunt found, and add letter.\n   for (var i = 0; i < results.length; i++) {\n    var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));\n    var markerIcon = MARKER_PATH + markerLetter + '.png';\n    // Use animation to drop the icons incrementally on the map.\n    markers[i] = new google.maps.Marker({\n     position: results[i].geometry.location,\n     animation: google.maps.Animation.DROP,\n     icon: markerIcon\n    });\n    // If the user clicks a resteraunt marker, show the details of that hotel\n    // in an info window.\n    markers[i].placeResult = results[i];\n    google.maps.event.addListener(markers[i], 'click', showInfoWindow);\n    setTimeout(dropMarker(i), i * 100);\n    addResult(results[i], i);\n   }\n  }\n });\n}\n\n// Search for attractions in the selected city, within the viewport of the map.\nfunction searchAttractions() {\n var search = {\n  bounds: map.getBounds(),\n  types: ['museum', 'art_gallery', 'park']\n };\n\n places.nearbySearch(search, function(results, status) {\n  if (status === google.maps.places.PlacesServiceStatus.OK) {\n   clearResults();\n   clearMarkers();\n   document.getElementById('results-heading').innerHTML = \"Results\";\n   // Create a marker for each attraction found, and\n   // assign a letter of the alphabetic to each marker icon.\n   for (var i = 0; i < results.length; i++) {\n    var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));\n    var markerIcon = MARKER_PATH + markerLetter + '.png';\n    // Use marker animation to drop the icons incrementally on the map.\n    markers[i] = new google.maps.Marker({\n     position: results[i].geometry.location,\n     animation: google.maps.Animation.DROP,\n     icon: markerIcon\n    });\n    // If the user clicks a attraction marker, show the details of that hotel\n    // in an info window.\n    markers[i].placeResult = results[i];\n    google.maps.event.addListener(markers[i], 'click', showInfoWindow);\n    setTimeout(dropMarker(i), i * 100);\n    addResult(results[i], i);\n   }\n  }\n });\n}\n\nfunction clearMarkers() {\n for (var i = 0; i < markers.length; i++) {\n  if (markers[i]) {\n   markers[i].setMap(null);\n  }\n }\n markers = [];\n}\n\n// Set the country restriction based on user input.\n// Also center and zoom the map on the given country.\nfunction setAutocompleteCountry() {\n var country = $('#country').val();\n if (country == 'all') {\n  autocomplete.setComponentRestrictions({ 'country': [] });\n  map.setCenter({ lat: 15, lng: 0 });\n  map.setZoom(2);\n }\n else {\n  autocomplete.setComponentRestrictions({ 'country': country });\n  map.setCenter(countries[country].center);\n  map.setZoom(countries[country].zoom);\n }\n clearResults();\n clearMarkers();\n}\n\nfunction dropMarker(i) {\n return function() {\n  markers[i].setMap(map);\n };\n}\n\n//Adds found results to table below map in webpage\nfunction addResult(result, i) {\n var results = document.getElementById('results');\n var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));\n var markerIcon = MARKER_PATH + markerLetter + '.png';\n\n var tr = document.createElement('tr');\n //Creates the striped effect you see By making every odd number darker\n tr.style.backgroundColor = (i % 2 === 0 ? '#F0F0F0' : '#FFFFFF');\n tr.onclick = function() {\n  google.maps.event.trigger(markers[i], 'click');\n };\n\n var iconTd = document.createElement('td');\n var nameTd = document.createElement('td');\n var icon = document.createElement('img');\n icon.src = markerIcon;\n icon.setAttribute('class', 'placeIcon');\n icon.setAttribute('className', 'placeIcon');\n var name = document.createTextNode(result.name);\n iconTd.appendChild(icon);\n nameTd.appendChild(name);\n tr.appendChild(iconTd);\n tr.appendChild(nameTd);\n results.appendChild(tr);\n}\n\nfunction clearResults() {\n var results = document.getElementById('results');\n while (results.childNodes[0]) {\n  results.removeChild(results.childNodes[0]);\n }\n}\n\n// Get the place details for a hotel,resteraunt,attraction. Show the information in an info window,\n// anchored on the marker for the hotel that the user selected.\nfunction showInfoWindow() {\n var marker = this;\n places.getDetails({ placeId: marker.placeResult.place_id },\n  function(place, status) {\n   if (status !== google.maps.places.PlacesServiceStatus.OK) {\n    return;\n   }\n   infoWindow.open(map, marker);\n   buildIWContent(place);\n\n  });\n}\n\n// Load the place information into the HTML elements used by the info window.\n\nfunction buildIWContent(place) {\n\n document.getElementById('iw-icon').innerHTML = '<img class=\"hotelIcon\" ' +\n  'src=\"' + place.icon + '\"/>';\n document.getElementById('iw-url').innerHTML = '<b><a href=\"' + place.url +\n  '\">' + place.name + '</a></b>';\n document.getElementById('iw-address').textContent = place.vicinity;\n\n if (place.formatted_phone_number) {\n  document.getElementById('iw-phone-row').style.display = '';\n  document.getElementById('iw-phone').textContent =\n   place.formatted_phone_number;\n }\n else {\n  document.getElementById('iw-phone-row').style.display = 'none';\n }\n\n\n\n // Assign a five-star rating to the place\n // to indicate the rating the place has earned, and a white star ('&#10025;')\n if (place.rating) {\n  var ratingHtml = '';\n  for (var i = 0; i < 5; i++) {\n   if (place.rating < (i + 0.5)) {\n    ratingHtml += '&#10025;';\n   }\n   else {\n    ratingHtml += '&#10029;';\n   }\n   document.getElementById('iw-rating-row').style.display = '';\n   document.getElementById('iw-rating').innerHTML = ratingHtml;\n  }\n }\n else {\n  document.getElementById('iw-rating-row').style.display = 'none';\n }\n\n // The regexp isolates the first part of the URL (domain plus subdomain)\n // to give a short URL for displaying in the info window.\n if (place.website) {\n  var fullUrl = place.website;\n  var website = hostnameRegexp.exec(place.website);\n  if (website === null) {\n   website = 'http://' + place.website + '/';\n   fullUrl = website;\n  }\n  document.getElementById('iw-website-row').style.display = '';\n  document.getElementById('iw-website').textContent = website;\n }\n else {\n  document.getElementById('iw-website-row').style.display = 'none';\n }\n}","undoManager":{"mark":0,"position":4,"stack":[[{"start":{"row":0,"column":0},"end":{"row":391,"column":1},"action":"insert","lines":["var map, places, infoWindow;","var markers = [];","var autocomplete;","var countryRestrict = { 'country': [] };","var MARKER_PATH = 'https://developers.google.com/maps/documentation/javascript/images/marker_green';","var hostnameRegexp = new RegExp('^https?://.+?/');","","//List of properties for countries contain details about zoom, and their location on a map","var countries = {"," 'au': {","  center: { lat: -25.3, lng: 133.8 },","  zoom: 4"," },"," 'br': {","  center: { lat: -14.2, lng: -51.9 },","  zoom: 3"," },"," 'ca': {","  center: { lat: 62, lng: -110.0 },","  zoom: 3"," },"," 'fr': {","  center: { lat: 46.2, lng: 2.2 },","  zoom: 5"," },"," 'de': {","  center: { lat: 51.2, lng: 10.4 },","  zoom: 5"," },"," 'mx': {","  center: { lat: 23.6, lng: -102.5 },","  zoom: 4"," },"," 'nz': {","  center: { lat: -40.9, lng: 174.9 },","  zoom: 5"," },"," 'it': {","  center: { lat: 41.9, lng: 12.6 },","  zoom: 5"," },"," 'za': {","  center: { lat: -30.6, lng: 22.9 },","  zoom: 5"," },"," 'es': {","  center: { lat: 40.5, lng: -3.7 },","  zoom: 5"," },"," 'pt': {","  center: { lat: 39.4, lng: -8.2 },","  zoom: 6"," },"," 'us': {","  center: { lat: 37.1, lng: -95.7 },","  zoom: 3"," },"," 'uk': {","  center: { lat: 54.8, lng: -4.6 },","  zoom: 5"," }","};","","//Resets the map and all the input fields.","function reset() {"," clearResults();"," clearMarkers();"," $('#country')[0].selectedIndex = 0;"," $(\"#autocomplete\").val(\"\");"," $('#results-heading').innerHTML(\"\");"," map.setZoom(2);"," map.setCenter(countries[\"uk\"].center);"," map.componentRestrictions = { 'country': [] };"," place = \"\";","","}","","  function initMap() {","   $(\"#accomodationRadio\").prop(\"checked\", true);","   map = new google.maps.Map(document.getElementById('map'), {","    zoom: 2,","    center: countries['uk'].center,","    mapTypeControl: false,","    panControl: false,","    zoomControl: false,","    streetViewControl: false,","    componentRestrictions: countryRestrict","","   });",""," infoWindow = new google.maps.InfoWindow({","  content: document.getElementById('info-content')"," });",""," // Create the autocomplete object and associate it with the UI input control."," // Restrict the search to the default country, and to place type \"cities\"."," autocomplete = new google.maps.places.Autocomplete(","  /** @type {!HTMLInputElement} */","  (","   document.getElementById('autocomplete')), {","   types: ['(cities)'],","   componentRestrictions: countryRestrict","  }); places = new google.maps.places.PlacesService(map);",""," autocomplete.addListener('place_changed', onPlaceChanged); "," document.getElementById('foodRadio').addEventListener('change', onPlaceChanged); "," document.getElementById('accomodationRadio').addEventListener('change', onPlaceChanged); "," document.getElementById('touristRadio').addEventListener('change', onPlaceChanged);"," // Add a DOM event listener to react when the user selects a country."," document.getElementById('country').addEventListener('change', setAutocompleteCountry); "," document.getElementById('reset-button').addEventListener(\"click\", setAutocompleteCountry);","","}","","// When the user selects a city, get the place details for the city and","// zoom the map in on the city.","function onPlaceChanged() {"," if ($(\"#accomodationRadio\").is(':checked')) {","  var place = autocomplete.getPlace();","  if (place.geometry) {","   map.panTo(place.geometry.location);","   map.setZoom(15);","   searchHotel();","  }","  else {","   $('#autocomplete').attr(\"placeholder\",\"Enter a city\");","  }"," }"," else if ($(\"#foodRadio\").is(':checked')) {","  var place = autocomplete.getPlace();","  if (place.geometry) {","   map.panTo(place.geometry.location);","   map.setZoom(15);","   searchRestaurant();","  }","  else {","   $('#autocomplete').attr(\"placeholder\",\"Enter a city\");","  }"," }"," else if ($(\"#touristRadio\").is(':checked')) {","  var place = autocomplete.getPlace();","  if (place.geometry) {","   map.panTo(place.geometry.location);","   map.setZoom(15);","   searchAttractions();","  }","  else {","   $('#autocomplete').attr(\"placeholder\",\"Enter a city\");","  }"," }","","}","","// Search for hotels in the selected city, within the viewport of the map.","function searchHotel() {"," var search = {","  bounds: map.getBounds(),","  types: ['lodging']"," };",""," places.nearbySearch(search, function(results, status) {","  if (status === google.maps.places.PlacesServiceStatus.OK) {","   clearResults();","   clearMarkers();","   document.getElementById('results-heading').innerHTML = \"Results\";","   // Create a marker for each hotel found, and","   // assign a letter of the alphabetic to each marker icon.","   for (var i = 0; i < results.length; i++) {","    var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));","    var markerIcon = MARKER_PATH + markerLetter + '.png';","    // Use marker animation to drop the icons incrementally on the map.","    markers[i] = new google.maps.Marker({","     position: results[i].geometry.location,","     animation: google.maps.Animation.DROP,","     icon: markerIcon","    });","    // If the user clicks a hotel marker, show the details of that hotel","    // in an info window.","    markers[i].placeResult = results[i];","    google.maps.event.addListener(markers[i], 'click', showInfoWindow);","    setTimeout(dropMarker(i), i * 100);","    addResult(results[i], i);","   }","  }"," });","}","","// Search for restaurants in the selected city, within the viewport of the map.","function searchRestaurant() {"," var search = {","  bounds: map.getBounds(),","  types: ['restaurant', 'bar']"," };",""," places.nearbySearch(search, function(results, status) {","  if (status === google.maps.places.PlacesServiceStatus.OK) {","   clearResults();","   clearMarkers();","   document.getElementById('results-heading').innerHTML = \"Results\";","   // Create a marker for each resteraunt found, and add letter.","   for (var i = 0; i < results.length; i++) {","    var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));","    var markerIcon = MARKER_PATH + markerLetter + '.png';","    // Use animation to drop the icons incrementally on the map.","    markers[i] = new google.maps.Marker({","     position: results[i].geometry.location,","     animation: google.maps.Animation.DROP,","     icon: markerIcon","    });","    // If the user clicks a resteraunt marker, show the details of that hotel","    // in an info window.","    markers[i].placeResult = results[i];","    google.maps.event.addListener(markers[i], 'click', showInfoWindow);","    setTimeout(dropMarker(i), i * 100);","    addResult(results[i], i);","   }","  }"," });","}","","// Search for attractions in the selected city, within the viewport of the map.","function searchAttractions() {"," var search = {","  bounds: map.getBounds(),","  types: ['museum', 'art_gallery', 'park']"," };",""," places.nearbySearch(search, function(results, status) {","  if (status === google.maps.places.PlacesServiceStatus.OK) {","   clearResults();","   clearMarkers();","   document.getElementById('results-heading').innerHTML = \"Results\";","   // Create a marker for each attraction found, and","   // assign a letter of the alphabetic to each marker icon.","   for (var i = 0; i < results.length; i++) {","    var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));","    var markerIcon = MARKER_PATH + markerLetter + '.png';","    // Use marker animation to drop the icons incrementally on the map.","    markers[i] = new google.maps.Marker({","     position: results[i].geometry.location,","     animation: google.maps.Animation.DROP,","     icon: markerIcon","    });","    // If the user clicks a attraction marker, show the details of that hotel","    // in an info window.","    markers[i].placeResult = results[i];","    google.maps.event.addListener(markers[i], 'click', showInfoWindow);","    setTimeout(dropMarker(i), i * 100);","    addResult(results[i], i);","   }","  }"," });","}","","function clearMarkers() {"," for (var i = 0; i < markers.length; i++) {","  if (markers[i]) {","   markers[i].setMap(null);","  }"," }"," markers = [];","}","","// Set the country restriction based on user input.","// Also center and zoom the map on the given country.","function setAutocompleteCountry() {"," var country = $('#country').val();"," if (country == 'all') {","  autocomplete.setComponentRestrictions({ 'country': [] });","  map.setCenter({ lat: 15, lng: 0 });","  map.setZoom(2);"," }"," else {","  autocomplete.setComponentRestrictions({ 'country': country });","  map.setCenter(countries[country].center);","  map.setZoom(countries[country].zoom);"," }"," clearResults();"," clearMarkers();","}","","function dropMarker(i) {"," return function() {","  markers[i].setMap(map);"," };","}","","//Adds found results to table below map in webpage","function addResult(result, i) {"," var results = document.getElementById('results');"," var markerLetter = String.fromCharCode('A'.charCodeAt(0) + (i % 26));"," var markerIcon = MARKER_PATH + markerLetter + '.png';",""," var tr = document.createElement('tr');"," //Creates the striped effect you see By making every odd number darker"," tr.style.backgroundColor = (i % 2 === 0 ? '#F0F0F0' : '#FFFFFF');"," tr.onclick = function() {","  google.maps.event.trigger(markers[i], 'click');"," };",""," var iconTd = document.createElement('td');"," var nameTd = document.createElement('td');"," var icon = document.createElement('img');"," icon.src = markerIcon;"," icon.setAttribute('class', 'placeIcon');"," icon.setAttribute('className', 'placeIcon');"," var name = document.createTextNode(result.name);"," iconTd.appendChild(icon);"," nameTd.appendChild(name);"," tr.appendChild(iconTd);"," tr.appendChild(nameTd);"," results.appendChild(tr);","}","","function clearResults() {"," var results = document.getElementById('results');"," while (results.childNodes[0]) {","  results.removeChild(results.childNodes[0]);"," }","}","","// Get the place details for a hotel,resteraunt,attraction. Show the information in an info window,","// anchored on the marker for the hotel that the user selected.","function showInfoWindow() {"," var marker = this;"," places.getDetails({ placeId: marker.placeResult.place_id },","  function(place, status) {","   if (status !== google.maps.places.PlacesServiceStatus.OK) {","    return;","   }","   infoWindow.open(map, marker);","   buildIWContent(place);","","  });","}","","// Load the place information into the HTML elements used by the info window.","","function buildIWContent(place) {",""," document.getElementById('iw-icon').innerHTML = '<img class=\"hotelIcon\" ' +","  'src=\"' + place.icon + '\"/>';"," document.getElementById('iw-url').innerHTML = '<b><a href=\"' + place.url +","  '\">' + place.name + '</a></b>';"," document.getElementById('iw-address').textContent = place.vicinity;",""," if (place.formatted_phone_number) {","  document.getElementById('iw-phone-row').style.display = '';","  document.getElementById('iw-phone').textContent =","   place.formatted_phone_number;"," }"," else {","  document.getElementById('iw-phone-row').style.display = 'none';"," }","","",""," // Assign a five-star rating to the place"," // to indicate the rating the place has earned, and a white star ('&#10025;')"," if (place.rating) {","  var ratingHtml = '';","  for (var i = 0; i < 5; i++) {","   if (place.rating < (i + 0.5)) {","    ratingHtml += '&#10025;';","   }","   else {","    ratingHtml += '&#10029;';","   }","   document.getElementById('iw-rating-row').style.display = '';","   document.getElementById('iw-rating').innerHTML = ratingHtml;","  }"," }"," else {","  document.getElementById('iw-rating-row').style.display = 'none';"," }",""," // The regexp isolates the first part of the URL (domain plus subdomain)"," // to give a short URL for displaying in the info window."," if (place.website) {","  var fullUrl = place.website;","  var website = hostnameRegexp.exec(place.website);","  if (website === null) {","   website = 'http://' + place.website + '/';","   fullUrl = website;","  }","  document.getElementById('iw-website-row').style.display = '';","  document.getElementById('iw-website').textContent = website;"," }"," else {","  document.getElementById('iw-website-row').style.display = 'none';"," }","}"],"id":1}],[{"start":{"row":7,"column":67},"end":{"row":7,"column":88},"action":"remove","lines":["their location on a m"],"id":5},{"start":{"row":7,"column":67},"end":{"row":7,"column":68},"action":"insert","lines":["m"]}],[{"start":{"row":7,"column":70},"end":{"row":7,"column":71},"action":"insert","lines":[" "],"id":6},{"start":{"row":7,"column":71},"end":{"row":7,"column":72},"action":"insert","lines":["l"]},{"start":{"row":7,"column":72},"end":{"row":7,"column":73},"action":"insert","lines":["o"]},{"start":{"row":7,"column":73},"end":{"row":7,"column":74},"action":"insert","lines":["c"]},{"start":{"row":7,"column":74},"end":{"row":7,"column":75},"action":"insert","lines":["a"]},{"start":{"row":7,"column":75},"end":{"row":7,"column":76},"action":"insert","lines":["t"]},{"start":{"row":7,"column":76},"end":{"row":7,"column":77},"action":"insert","lines":["o"]},{"start":{"row":7,"column":77},"end":{"row":7,"column":78},"action":"insert","lines":["p"]},{"start":{"row":7,"column":78},"end":{"row":7,"column":79},"action":"insert","lines":["n"]}],[{"start":{"row":7,"column":78},"end":{"row":7,"column":79},"action":"remove","lines":["n"],"id":7},{"start":{"row":7,"column":77},"end":{"row":7,"column":78},"action":"remove","lines":["p"]},{"start":{"row":7,"column":76},"end":{"row":7,"column":77},"action":"remove","lines":["o"]}],[{"start":{"row":7,"column":76},"end":{"row":7,"column":77},"action":"insert","lines":["i"],"id":8},{"start":{"row":7,"column":77},"end":{"row":7,"column":78},"action":"insert","lines":["o"]},{"start":{"row":7,"column":78},"end":{"row":7,"column":79},"action":"insert","lines":["n"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":358,"column":14},"end":{"row":358,"column":14},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1564841117641}